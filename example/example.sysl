RestApi [json_map_fields="dashes", interface="Storer", interface_doc="Storer is cool"]:
    /api [middleware="AuthorizeRoot"]:
        GET [method_name="GetKeys", method_doc="DataSet"]:
            return Keys
        POST (ds <: DataSetPayload) [method_name="CreateDataSet"]:
            return Key
    /api/{key<:string}  [middleware="AuthorizeDataSet"]:
        GET ?time={queryTime<:string} [method_name="GetData"]:
            return Data
        PUT(dp <: DataPayload) [method_name="PutData"]:
            return Data
        /{startTime<:string}:
            GET [method_name="GetDataWithStart"]:
                return Data
            PUT(dp <: DataPayload) [method_name="PutDataWithStart"]:
                return Data
            DELETE [method_name="DeleteData"]:
                return
        /schema:
            GET ?time={queryTime<:string} [method_name="GetSchema"]:
                return Schema
            PUT(sp <: SchemaPayload) [method_name="PutSchema"]:
                return Schema
        /schema/{startTime<:string}:
            GET [method_name="GetSchemaWithStart"]:
                return Schema
            PUT(sp <: SchemaPayload) [method_name="PutSchemaWithStart"]:
                return Schema
            DELETE [method_name="DeleteSchema"]:
                return
        /name:
            GET ?time={queryTime<:string} [method_name="GetDataSetName"]:
                return KeyName
            PUT(np <: NamePayload) [method_name="PutDataSetName"]:
                return KeyName
    /api/admin/{key<:string}  [middleware="AuthorizeDataSet"]:
        DELETE [method_name="DeleteDataSet"]:
            return
        /start-times:
            GET [method_name="GetStartTimes"]:
                return Times
        /creation-times:
            GET [method_name="GetCreationTimes"]:
                return CreationTimes
        /restrictions:
            GET [method_name="GetRestriction"]:
                return Restriction
            PUT(r <: Restriction) [method_name="PutRestriction"]:
                return Restriction
        /subscribe:
            POST(s <: Subscription) [method_name="PutSubscription"]:
                return Subscription
        /unsubscribe:
            POST(s <: Subscription) [method_name="DeleteSubscription"]:
                return

    !type Data:
        StartTime    <: STRING
        JSONData     <: STRING [json="data"]
        CreationTime <: STRING

    !type Schema [doc="Schema holds JSON Schema to validate Data against, a name for key creation."]:
        StartTime    <: STRING
        JSONSchema   <: STRING [json="schema"]
        CreationTime <: STRING

    !type Subscription:
        URL          <: STRING [json="url"]
        SecreteToken <: STRING

    !type Restriction:
        SchemaFrozenUntil <: STRING
        DataFrozenUntil   <: STRING
        ReadScopes(0..)   <: STRING
        ReadWriteScopes(0..)   <: STRING
        AdminScopes(0..)       <: STRING

    !type Keys:
        Keys(0..) <: STRING

    !type Key:
        Key <: STRING

    !type KeyName:
        Key  <: STRING
        Name <: STRING

    !type Times:
        Data(0..)   <: STRING
        Schema(0..) <: STRING

    !type CreationStartTime:
        CreationTime <: STRING
        StartTime <: STRING

    !type CreationTimes:
        Data   <: map of string:CreationStartTime
        Schema <: map of string:CreationStartTime

    !type DataSetPayload:
        Name         <: STRING
        StartTimeStr <: STRING [json="start-time"]
        JSONSchema   <: ANY [json="schema"]

    !type NamePayload:
        Name <: STRING

    !type DataPayload:
        Data <: any

    !type SchemaPayload:
        Schema <: any

    !type UpdateEvent:
        Key <: STRING
        StartTime <: STRING
        Data <: ANY
        Schema <: ANY
        Deleted <: bool

